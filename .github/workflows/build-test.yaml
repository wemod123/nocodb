on:
  push:
    branches:
      - build/test-tries

# Common Variables
env:
  APP_NAME: nocobuild

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.14.0

      - name: Get Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Build Common SDK
        working-directory: packages/nocodb-sdk
        run: |
          export NODE_OPTIONS="--max_old_space_size=16384"
          pnpm install --ignore-scripts --no-frozen-lockfile --ignore-workspace 
          pnpm run build

      - name: Build GUI
        working-directory: packages/nc-gui
        run: |
          export NODE_OPTIONS="--max_old_space_size=16384"
          pnpm install --ignore-scripts --no-frozen-lockfile
          pnpm run build:copy

      - name: Build nocodb
        working-directory: packages/nocodb
        run: |
          pnpm install --no-frozen-lockfile
          pnpm run build:sync
          pnpm add nocodb-sdk@'file:./nocodb-sdk' nc-lib-gui@'file:./nc-lib-gui'
          pnpm run docker:build

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Image
        working-directory: packages/nocodb
        run: |
          docker build -f Dockerfile.lift . -t ${{ secrets.REGISTRY }}/${{ env.APP_NAME }}:${{ steps.package-version.outputs.current-version }}
          docker push ${{ secrets.REGISTRY }}/${{ env.APP_NAME }}:${{ steps.package-version.outputs.current-version }}
